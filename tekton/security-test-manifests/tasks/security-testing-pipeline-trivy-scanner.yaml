---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: trivy-scanner
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Security
    tekton.dev/tags: CLI, trivy
    tekton.dev/displayName: "trivy scanner"
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    Trivy is a simple and comprehensive scanner for
    vulnerabilities in container images,file systems
    ,and Git repositories, as well as for configuration issues.

    This task can be used to scan for vulnenrabilities on the source code
    in stand alone mode.
  workspaces:
    - name: manifest-dir
  # params:
  #   - name: COMMANDS
  #     description: The Arguments to be passed to Trivy command.
  #     type: string
  #   - name: IMAGE_PATH
  #     description: Image or Path to be scanned by trivy.
  #     type: string
  # steps:
  #   - name: trivy-scan
  #     image: ubuntu
  #     workingDir: $(workspaces.manifest-dir.path)
  #     script: |
  #       #!/usr/bin/env bash
  #       apt-get update -y
  #       apt-get install wget apt-transport-https gnupg lsb-release -y
  #       wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | tee /usr/share/keyrings/trivy.gpg > /dev/null
  #       echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | tee -a /etc/apt/sources.list.d/trivy.list
        
  #       apt-get update -y
  #       apt-get install \
  #         ca-certificates \
  #         curl \
  #         gnupg \
  #         lsb-release -y
        
  #       apt-get update -y
  #       mkdir -p /etc/apt/keyrings
  #       curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  #       echo \
  #         "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  #         $(lsb_release -cs) stable" |  tee /etc/apt/sources.list.d/docker.list > /dev/null
        
  #       apt-get update -y
  #       apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y

  #       apt-get update -y
  #       apt-get install trivy -y
  #       cmd="trivy --timeout 10m $(params.COMMANDS) $(params.IMAGE_PATH) -f json > $(workspaces.manifest-dir.path)/output/trivy-report.json"
  #       echo "Running '$cmd'"
  #       eval "$cmd"
  params:
  - name: TRIVY_IMAGE
    default: docker.io/aquasec/trivy@sha256:dea76d4b50c75125cada676a87ac23de2b7ba4374752c6f908253c3b839201d9
    description: Trivy scanner image to be used
    type: string
  - name: IMAGE_PATH
    description: Image or Path to be scanned by trivy.
    type: string
    default: "lyvt/decoding-sdk:1.0"
  - name: ARGS
    description: The Arguments to be passed to Trivy command.
    type: array
    default:
      ["image", "-f", "json", "-o", "$(workspaces.manifest-dir.path)/output/trivy-report.json"]
  steps:
    - name: trivy-scan
      image: $(params.TRIVY_IMAGE)
      workingDir: $(workspaces.manifest-dir.path)
      script: |
        #!/usr/bin/env sh
          cmd="trivy $* $(params.IMAGE_PATH)"
          echo "Running trivy task with command below"
          echo "$cmd"
          eval "$cmd"
      args:
        - "$(params.ARGS)"